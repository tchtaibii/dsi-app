version: '3.1'
services:
  # database
  my-mariadb:
    image: mariadb:latest
    container_name: my-mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db:/var/lib/mysql
    networks:
      - net
  # database GUI
  adminer:
    image: adminer:latest
    container_name: my-adminer
    ports:
      - "8080:8080"
    depends_on:
      - my-mariadb
    networks:
      - net
  # backend
  my-backend:
    container_name: my-backend
    build:
      context: ./backend
    restart: always
    depends_on:
      - my-mariadb
    volumes:
      - ./backend:/app
      - ./backend/requirements.txt:/app/requirements.txt
    env_file:
      - ./backend/.env
    networks:
      - net
    ports:
      - "8000:8000"
  #glances
  glances:
    container_name: glances
    build : ./glances
    networks:
      - net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    # ports:
    #   - 9000:9000
  # frontend
  my-frontend:
    container_name: my-frontend
    build: ./frontend
    restart: always
    env_file:
      - ./frontend/.env
    depends_on:
      - my-backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
    networks:
      - net
  #nginx
  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - my-backend
      - my-frontend
      - glances
    networks:
      - net
volumes:
  # mariadb volume
  db:
    driver: local

networks:
  net:
    driver: bridge
